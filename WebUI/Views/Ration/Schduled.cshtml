@model WebUI.Models.RationScheduleViewModelNew

@{
    ViewBag.Title = "Scheduled";
}
<link href="~/Content/Site.css" rel="stylesheet" />
<h2>View Schedule</h2>
<header>
    <a href="/Ration/Dashboard">Back to Dashboard</a>

</header>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">

        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <span id="ErrorDateStartMsg" style="color:red;"></span>

        <div id="FoodItem">
            <div class="form-group">
                <div class="col-md-10">
                    <label>Start Date</label>
                    @Html.EditorFor(model => model.statedate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "StartingDate" } })
                    <br />
                    <input type="submit" value="Create" id="GetSchdule" class="btn btn-primary" />
                </div>
            </div>

        </div>
    </div>


    if (Model.lstRationScheduleViewModel != null && Model.lstRationScheduleViewModel.Count > 0)
    {
        <table class="table table-bordered dataTable no-footer">
            <caption></caption>
            <colgroup>
                <col>
                <col>
            </colgroup>
            <colgroup span="3"></colgroup>
            <thead>
                <tr>
                    <th scope="col"> Schedule Date</th>
                    <th scope="col">Packet Id </th>
                    <th scope="col">Packet Type</th>
                    <th scope="col">Packet Content</th>
                    <th scope="col">Calories</th>
                    <th scope="col">Expiry Date</th>
                    <th scope="col">
                        Quantity in
                        Litres
                    </th>
                </tr>
            </thead>

            @foreach (var item in Model.lstRationScheduleViewModel)
            {
                bool isFrist = true;
                <tbody>

                    @foreach (var itemration in item.listRation)
                    {
                        <tr>
                            @if (isFrist)
                            {
                                <th rowspan="@item.CounterSpan" scope="rowgroup">@item.StartDate.ToString("dd/MM/yyyy")</th>
                                isFrist = false;
                            }

                            <th scope="row">@itemration.PacketId</th>
                            <td>@itemration.PacketType</td>
                            <td>@itemration.PacketContent</td>
                            <td>
                                @if (@itemration.Calories == 0)
                                {
                                    var valCal = "-";
                                    @valCal;
                                }
                                else
                                {
                                    @itemration.Calories

                                }
                            </td>
                            <td>
                                @*@itemration.ExpiryDate*@
                                @Convert.ToString(string.Format("{0:dd/MM/yyyy}", itemration.ExpiryDate))
                            </td>
                            <td>
                                @if (@itemration.LitersQty == 0)
                                {
                                    var valLtr = "-";
                                    @valLtr;
                                }
                                else
                                {
                                    @itemration.LitersQty

                                }
                            </td>
                        </tr>

                    }
                </tbody>
            }

        </table>
        <br />
        <p id="DisplayInventory" style="font-weight:bold">Number of days you can survive with current inventory : @Model.lstRationScheduleViewModel.OrderByDescending(a => a.LivedLife).FirstOrDefault().LivedLife<span id="LifeNumber"></span></p>

    }

}


@section Scripts {

    <script type="text/javascript">


        $("#GetSchdule").click(function () {
            var StartDate = $("#StartingDate").val();
            if (StartDate == "") {
                $("#ErrorDateStartMsg").text("Please Select The Start Date");
                return false;
            }
            sessionStorage.setItem("startdate", $('#StartingDate').val());
            $("#StartingDate").val(sessionStorage.getItem("startdate"));
        });

        $(document).ready(function () {
            $("#StartingDate").addClass("calender");
            if (sessionStorage.getItem("startdate") == "" || sessionStorage.getItem("startdate") == null || sessionStorage.getItem("startdate") == undefined)
                $("#StartingDate").val("");
            else
                $("#StartingDate").val(sessionStorage.getItem("startdate"));

            $("form").attr('autocomplete', 'off');

            $('#StartingDate').datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                minDate: 0,
                changeYear: true,
            });

        });


    </script>
}
